# Generated by Django 2.0.4 on 2018-05-14 11:46

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0019_delete_filter'),
        ('wagtailcore', '0040_page_draft_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('activityTitle', models.CharField(blank=True, max_length=255)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('price', models.CharField(blank=True, max_length=255)),
                ('image1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('image2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('image3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('image4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock(blank=True)), ('image', wagtail.images.blocks.ImageChooserBlock())), blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContentPageHero',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title2', models.CharField(blank=True, max_length=255)),
                ('body', wagtail.core.fields.StreamField((('text', wagtail.core.blocks.RichTextBlock(blank=True)), ('cards', wagtail.core.blocks.StructBlock((('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(blank=True)), ('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.core.blocks.CharBlock(blank=True)), ('likes', wagtail.core.blocks.IntegerBlock(blank=True)), ('authorName', wagtail.core.blocks.CharBlock(blank=True)), ('link', wagtail.core.blocks.CharBlock(blank=True)), ('price', wagtail.core.blocks.CharBlock(blank=True)), ('features', wagtail.core.blocks.CharBlock(blank=True))), blank=True))),))), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()),))), ('video', wagtail.core.blocks.StructBlock((('url', wagtail.core.blocks.CharBlock()),)))), blank=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContentPageNoHero',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('text', wagtail.core.blocks.RichTextBlock(blank=True)), ('cards', wagtail.core.blocks.StructBlock((('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(blank=True)), ('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.core.blocks.CharBlock(blank=True)), ('likes', wagtail.core.blocks.IntegerBlock(blank=True)), ('authorName', wagtail.core.blocks.CharBlock(blank=True)), ('link', wagtail.core.blocks.CharBlock(blank=True)), ('price', wagtail.core.blocks.CharBlock(blank=True)), ('features', wagtail.core.blocks.CharBlock(blank=True))), blank=True))),))), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()),))), ('video', wagtail.core.blocks.StructBlock((('url', wagtail.core.blocks.CharBlock()),)))), blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContentTestPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('text', wagtail.core.blocks.RichTextBlock(blank=True)), ('cards', wagtail.core.blocks.StructBlock((('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(blank=True)), ('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.core.blocks.CharBlock(blank=True)), ('likes', wagtail.core.blocks.IntegerBlock(blank=True)), ('authorName', wagtail.core.blocks.CharBlock(blank=True)), ('link', wagtail.core.blocks.CharBlock(blank=True)), ('price', wagtail.core.blocks.CharBlock(blank=True)), ('features', wagtail.core.blocks.CharBlock(blank=True))), blank=True))),)))), blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContentTestPage2',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('text', wagtail.core.blocks.RichTextBlock(blank=True)), ('cards', wagtail.core.blocks.StructBlock((('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(blank=True)), ('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.core.blocks.CharBlock(blank=True)), ('likes', wagtail.core.blocks.IntegerBlock(blank=True)), ('authorName', wagtail.core.blocks.CharBlock(blank=True)), ('link', wagtail.core.blocks.CharBlock(blank=True)), ('price', wagtail.core.blocks.CharBlock(blank=True)), ('features', wagtail.core.blocks.CharBlock(blank=True))), blank=True))),))), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()),))), ('video', wagtail.core.blocks.StructBlock((('url', wagtail.core.blocks.CharBlock()),)))), blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePageHero',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title2', models.CharField(blank=True, max_length=255)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePageManual1',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title2', models.CharField(blank=True, max_length=255)),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePageNoHero',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField((('text', wagtail.core.blocks.RichTextBlock(blank=True)), ('cards', wagtail.core.blocks.StructBlock((('cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(blank=True)), ('image', wagtail.images.blocks.ImageChooserBlock()), ('description', wagtail.core.blocks.CharBlock(blank=True)), ('likes', wagtail.core.blocks.IntegerBlock(blank=True)), ('authorName', wagtail.core.blocks.CharBlock(blank=True)), ('link', wagtail.core.blocks.CharBlock(blank=True)), ('price', wagtail.core.blocks.CharBlock(blank=True)), ('features', wagtail.core.blocks.CharBlock(blank=True))), blank=True))),))), ('image', wagtail.images.blocks.ImageChooserBlock())), blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
